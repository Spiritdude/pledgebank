#!/usr/bin/perl -w

# Make microsite versions of PledgeBank's main CSS file

use FindBin;
chdir $FindBin::Bin;

my $outdir = '../web/microsites/autogen/';
mkdir $outdir;

my @sites = qw( catcomm london );

my %has_people = (
    london => 1,
);

# 21004a - "Bank" in the heading, and nav. colour
my %purple_text = (
    catcomm => '000000',
    london => '000000',
);

# 522994 - Link colour,  and lots of borders
my %link_colour = (
    catcomm => '31659c',
    london => '31659c',
);

# 7b52a5 - visited link colour
my %visited_colour = (
    catcomm => '004488',
    london => '004488',
);

# 9c7bbd - header background, "start" background
my %head_back = (
    catcomm => '99ccff',
    london => 'ee3438',
);

# c6b5de - new form background, spreadword background
my %form_back = (
    catcomm => '99ccff',
    london => '9999ff',
);

# f6e5ff - Pledge background, tips background, box hover
my %pledge_back = (
    catcomm => 'd7ebff',
    london => 'ccccff',
);

# ff8429 - Sign box border
my %sign_border = (
);

# ffffcc - Sign box background
my %sign_back = (
);

open(MAINCSS, "../web/pb.2.css") or die "";

foreach my $site (@sites) {
    (my $func = $site) =~ s/^(\d)/c$1/;
    $func =~ s/-//;

    seek MAINCSS, 0, 0;
    open(NEWCSS, ">$outdir$site.css") or die "";
    print NEWCSS "/* AUTOMATICALLY GENERATED by make_microsites_css, do not edit */\n\n";
    my $selector = '';
    while (<MAINCSS>) {
        $selector = $1 if /^(.*) {/;
        s/pb\.2\.css/$site.css/;
        s/Top-level style sheet for PledgeBank.com/Custom style sheet for $site version of PledgeBank/;

        s/#21004a/#$purple_text{$func}/gi if $purple_text{$func};
        s/#522994/#$link_colour{$func}/gi if $link_colour{$func};
        s/#7b52a5/#$visited_colour{$func}/gi if $visited_colour{$func};
        s/#9c7bbd/#$head_back{$func}/gi if $head_back{$func};
        s/#c6b5de/#$form_back{$func}/gi if $form_back{$func};
        s/#f6e5ff/#$pledge_back{$func}/gi if $pledge_back{$func};
        s/#ff8429/#$sign_border{$func}/gi if $sign_border{$func};
        s/#ffffcc/#$sign_back{$func}/gi if $sign_back{$func};

        unless ($has_people{$func}) {
            s#background-image.*?/i/(box|comment|iwill|light|people|person|speechbubble).*?;##gi;
            s#padding-left:.*##gi if $selector =~ /^(#successfulpledges li|#success_more|#tellworld h2|#tellworld h3|#front #comments li|#startblurb a|#currentpledges li)$/;
            s#height: 54px##gi if $selector eq '#success_more';
            s#min-height:.*##gi if $selector eq '#localsignupeverypage';
            s#margin: 1em 55px 1em 0;#margin: 1em 0;#gi if $selector eq '#startblurb';
            s#padding: 15px 10px 10px#padding: 10px#gi if $selector eq '#startblurb';
        }

        my $changes = $func . '_changes';
        my $next;
        $next = $changes->($selector) if defined &$changes;
        next if $next && $next eq 'next';

        print NEWCSS $_;
    }
    my $extra = $func . '_extra';
    $extra->() if defined &$extra;
}

# Microsites

sub catcomm_changes {
    my $selector = shift;
    if ($selector eq '#col') {
        s#float: right;##gi;
        s#width: 33%;##gi;
    }
}

sub catcomm_extra {
    print NEWCSS <<EOF;
#currentpledges, #front #comments {
    float: left;
    clear: none;
    width: 59%;
}
#startblurb1, #extrablurb {
    float: right;
    width: 32%;
}
EOF
}

sub london_extra {
    print NEWCSS "\n#sponsor { text-align: center; clear: both; }\n";
}

